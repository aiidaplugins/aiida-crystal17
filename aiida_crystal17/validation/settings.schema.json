{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "CRYSTAL17 structure input settings",
  "description": "Settings for initial manipulation of structures and conversion to .gui (fort.34) input file",
  "type": "object",
  "required": [
    "crystal",
    "symmetry",
    "3d"
  ],
  "additionalProperties": false,
  "properties": {
    "crystal": {
      "description": "specific CRYSTAL17 settings (these will only be used if specific symmetry operations are used)",
      "type": "object",
      "required": [
        "system",
        "transform"
      ],
      "additionalProperties": false,
      "properties": {
        "system": {
          "description": "the crystal family (referred to as 1 to 6 in CRYSTAL)",
          "type": "string",
          "enum": [
            "triclinic",
            "monoclinic",
            "orthorhombic",
            "tetragonal",
            "hexagonal",
            "cubic"
          ]
        },
        "transform": {
          "description": "the transformation matrix for converting between primitive and crystallographic cells, referred to as centering code in CRYSTAL",
          "type": [
            "integer",
            "null"
          ],
          "minimum": 1,
          "maximum": 6
        }
      }
    },
    "symmetry": {
      "description": "parameters for detecting and setting symmetry operations",
      "type": "object",
      "required": [
        "symprec",
        "angletol",
        "operations"
      ],
      "additionalProperties": false,
      "properties": {
        "symprec": {
          "description": "Length tolerance for symmetry finding: 0.01 is fairly strict and works well for properly refined structures, but 0.1 may be required for unrefined structures",
          "type": "number",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "angletol": {
          "description": "Angle tolerance for symmetry finding in the unit of angle deg, if null, an optimized routine is used to judge symmetry",
          "type": [
            "number",
            "null"
          ],
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "operations": {
          "description": "(optional) specific operations to use (in the cartesian basis)",
          "type": [
            "null",
            "array"
          ],
          "items": {
            "description": "each item should be a list of [r00,r10,r20,r01,r11,r21,r02,r12,r22,t0,t1,t2]",
            "type": "array",
            "minItems": 12,
            "maxItems": 12,
            "items": {
              "type": "number"
            }
          }
        }
      }
    },
    "kinds": {
      "description": "settings for input properties of each species kind",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "spin_alpha": {
          "description": "kinds with initial alpha (+1) spin (set by ATOMSPIN)",
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          }
        },
        "spin_beta": {
          "description": "kinds with initial beta (-1) spin (set by ATOMSPIN)",
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          }
        },
        "fixed": {
          "description": "kinds with are fixed in position for optimisations (set by FRAGMENT)",
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          }
        },
        "ghosts": {
          "description": "kinds which will be removed, but their basis set are left (set by GHOSTS)",
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          }
        }
      }
    },
    "3d": {
      "description": "settings for 3-dimensional structures",
      "type": "object",
      "required": [
        "standardize",
        "primitive",
        "idealize"
      ],
      "additionalProperties": false,
      "properties": {
        "standardize": {
          "description": "whether to standardize the structure, see https://atztogo.github.io/spglib/definition.html#conventions-of-standardized-unit-cell",
          "type": "boolean"
        },
        "primitive": {
          "description": "whether to convert the structure to its (standardized) primitive",
          "type": "boolean"
        },
        "idealize": {
          "description": "whether to remove distortions of the unit cell's atomic positions, using obtained symmetry operations",
          "type": "boolean"
        }
      }
    }
  }
}
